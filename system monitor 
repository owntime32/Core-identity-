sentinel_system/
├── core/
│   └── sentinel_core.py
├── control_panel/
│   └── control_panel_entity.py
├── modules/
│   ├── media_access_manager.py
│   ├── snapshot_registry.py
│   ├── rollback_manager.py
│   ├── fingerprinting.py
│   └── licensing.py
├── config/
│   └── settings.py
├── utils/
│   └── logger.py
└── main.py
class SentinelCore:
    def __init__(self):
        self.logs = []
        self.alerts = []

    def validate_action(self, module, action, metadata):
        log_entry = f"[{module}] Action: {action} | Metadata: {metadata}"
        self.logs.append(log_entry)
        if self._is_anomalous(action, metadata):
            self.alerts.append(log_entry)
            print(f"⚠️ ALERT: {log_entry}")
        else:
            print(f"✅ OK: {log_entry}")

    def _is_anomalous(self, action, metadata):
        return metadata.get("unauthorized", False)

    def get_logs(self):
        return self.logs

    def get_alerts(self):
        return self.alerts